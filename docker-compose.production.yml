services:
  backend:
    image: ghcr.io/fabian416/sami/backend:latest
    ports:
      - "5001:5001"
    restart: always
    networks:
      - sami_network
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - NEXT_PUBLIC_ENVIRONMENT=production

  frontend:
    image: ghcr.io/fabian416/sami/frontend:latest
    ports:
      - "3001:3001"
    restart: always
    networks:
      - sami_network
    depends_on:
      - backend
    env_file:
      - .env
    environment:
      - PORT=3001
      - NEXT_PUBLIC_ENVIRONMENT=production

  staging-backend:
    image: ghcr.io/fabian416/sami/backend:staging
    ports:
      - "6001:5001"
    restart: always
    networks:
      - sami_network
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - NEXT_PUBLIC_ENVIRONMENT=development

  staging-frontend:
    image: ghcr.io/fabian416/sami/frontend:staging
    ports:
      - "4001:3001"
    restart: always
    networks:
      - sami_network
    depends_on:
      - backend
    env_file:
      - .env
    environment:
      - PORT=3001
      - NEXT_PUBLIC_ENVIRONMENT=development

  ai-agent:
    image: ghcr.io/fabian416/sami/ai-agent:latest
    ports:
      - "3000:3000"
    restart: always
    networks:
      - sami_network
    env_file:
      - .env

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: always
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    networks:
      - sami_network
    environment:
      - SAMI_SITE=playsami.fun
      - SAMI_API=api.playsami.fun
      - STAGING_SAMI_SITE=staging.playsami.fun
      - STAGING_SAMI_API=staging-api.playsami.fun
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data

volumes:
  caddy_data: {}

networks:
  sami_network:
    driver: bridge